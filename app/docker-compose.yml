version: '3.9'

services:
  zookeeper:
    image: zookeeper
    restart: always
    profiles: ["backend"]
    ports:
      - '2181:2181'
  kafka:
    depends_on:
      - zookeeper
    image: bitnami/kafka:2.8.1
    platform: linux/amd64
    restart: always
    profiles: ["backend"]
    ports:
      - '9093:9093'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  dynamodb:
    image: amazon/dynamodb-local:1.21.0
    restart: always
    profiles: ["backend"]
    ports:
      - '8000:8000'
  kafka-ui:
    depends_on:
      - zookeeper
      - kafka
    image: provectuslabs/kafka-ui
    restart: always
    profiles: ["backend"]
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  aws-otel-collector:
    image: amazon/aws-otel-collector:latest
    volumes:
      - ./otel-config.yml:/etc/otel-agent-config.yml
      - ~/.aws:/root/.aws
    profiles: ["ops"]
    ports:
      - '4317:4317'   # OTLP receiver
    environment:
      - AWS_REGION=ap-northeast-2
    command: ["--config=/etc/otel-agent-config.yml"]
  dev:
    build:
      context: .
      dockerfile: Dockerfile.local
    command: ["air", "-c", ".air.local.toml"]
    profiles: ["dev"]
    working_dir: /src
    stop_signal: SIGINT
    stop_grace_period: 5s
    volumes:
      - .:/src
      - ~/.aws:/root/.aws
    ports:
      - '8090:8090'
  hotel:
    build:
      context: .
      dockerfile: Dockerfile.local
    command: ["air", "-c", ".air.hotel.toml"]
    profiles: ["hotel"]
    working_dir: /src
    stop_signal: SIGINT
    stop_grace_period: 5s
    volumes:
      - .:/src
      - ~/.aws:/root/.aws
    ports:
      - '8091:8090'
    environment:
      - APP_DISABLE_HTTP=false
  wire:
    build:
      context: .
      dockerfile: Dockerfile.local
    profiles: ["wire"]
    working_dir: /src/pkg/app
    command: [wire]
    volumes:
      - .:/src
