version: '3'

dotenv: [.env]


tasks:
  migrate:
    cmds:
      - |
        echo $DB_TABLE_NAME
        aws dynamodb create-table \
        --table-name trip \
        --attribute-definitions AttributeName=PK,AttributeType=S AttributeName=SK,AttributeType=S \
        --key-schema AttributeName=PK,KeyType=HASH AttributeName=SK,KeyType=RANGE \
        --billing-mode PAY_PER_REQUEST \
        --endpoint-url http://localhost:8000

  ecr-login:
    cmds:
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin "$(aws sts get-caller-identity --query Account --output text).dkr.ecr.ap-northeast-2.amazonaws.com"

  build-app-image:
    vars:
      BUILD_TAG:
        sh: git rev-parse --short=10 HEAD
    cmds:
      - docker build --target server -t {{.APP_NAME}}:{{.BUILD_TAG}} --build-arg APP_NAME={{.APP_NAME}} --build-arg APP_PORT=$APP_PORT --build-arg BUILD_TAG={{.BUILD_TAG}} .

  push-image:
    vars:
      BUILD_TAG:
        sh: git rev-parse --short=10 HEAD
    cmds:
      - docker tag {{.APP_NAME}}:{{.BUILD_TAG}} $(aws sts get-caller-identity --query Account --output text).dkr.ecr.ap-northeast-2.amazonaws.com/{{.APP_NAME}}:{{.BUILD_TAG}}
      - docker push $(aws sts get-caller-identity --query Account --output text).dkr.ecr.ap-northeast-2.amazonaws.com/{{.APP_NAME}}:{{.BUILD_TAG}}

  build-all:
    cmds:
      - task: build-app-image
        vars: {APP_NAME: "car"}
      - task: build-app-image
        vars: {APP_NAME: "hotel"}
      - task: build-app-image
        vars: {APP_NAME: "flight"}
      - task: build-app-image
        vars: {APP_NAME: "trip"}

  push-all:
    deps: [ecr-login]
    cmds:
      - task: push-image
        vars: {APP_NAME: "car"}
      - task: push-image
        vars: {APP_NAME: "hotel"}
      - task: push-image
        vars: {APP_NAME: "flight"}
      - task: push-image
        vars: {APP_NAME: "trip"}

  create-repo:
    vars:
      REPOSITORIES: |
        trip
        car
        hotel
        flight

    cmds:
      - |
        ARR=(`echo "{{.REPOSITORIES}}" | tr '\n' ' '`)
        for REPO in ${ARR[@]}
        do
          aws ecr create-repository --repository-name ${REPO} {{.CLI_ARGS}}
        done

  create-topic:
    vars:
      TOPICS: |
        trip-service
        car-service
        hotel-service
        flight-service

    cmds:
      - |
        ARR=(`echo "{{.TOPICS}}" | tr '\n' ' '`)
        for TOPIC in ${ARR[@]}
        do
          docker run --rm haandol/kafka-cli:2.6.2 kafka-topics.sh --create --topic $TOPIC --partitions 3 --replication-factor 3 --bootstrap-server $KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
        done